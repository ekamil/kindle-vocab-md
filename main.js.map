{
  "version": 3,
  "sources": ["src/cli.ts", "package.json", "src/render.ts", "src/templates/index.ts", "src/select.ts", "src/main.ts"],
  "sourcesContent": ["import { Command, Option } from \"@commander-js/extra-typings\";\nimport { name, version, description } from \"../package.json\";\n\nconst enum OutputFormat {\n  MarkdownFile = \"md-file\",\n  MarkdownDir = \"md-dir\",\n  CSV = \"csv\",\n}\n\nexport const program = new Command()\n  .description(description)\n  .version(version)\n  .name(name)\n  .option(\n    \"-d, --database <path>\",\n    \"path to vocab.db SQLite database\",\n    \"./vocab.db\"\n  )\n  .option(\"-o, --output <path>\", \"directory or file for the results\", \"./out\")\n  .addOption(\n    new Option(\"-f, --format <format>\", \"output format\")\n      .choices([\n        OutputFormat.MarkdownFile,\n        OutputFormat.MarkdownDir,\n        OutputFormat.CSV,\n      ])\n      .default(OutputFormat.MarkdownDir)\n  );\n", "{\n  \"name\": \"kindle-vocab-md\",\n  \"version\": \"0.1.0-alpha\",\n  \"description\": \"Export utility for Kindle Vocabulary\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"cli\": \"ts-node src/cli.ts\",\n    \"select\": \"ts-node src/select.ts\",\n    \"render\": \"ts-node src/render.ts\",\n    \"build\": \"tsc -noEmit && node esbuild.config.mjs production\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"lint\": \"eslint ./src\"\n  },\n  \"keywords\": [],\n  \"author\": \"kamil@essekkat.pl\",\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n    \"@types/node\": \"^18.11.18\",\n    \"@types/nunjucks\": \"^3.2.1\",\n    \"@types/sqlite3\": \"^3.1.8\",\n    \"@typescript-eslint/eslint-plugin\": \"^5.54.0\",\n    \"@typescript-eslint/parser\": \"^5.54.0\",\n    \"esbuild\": \"^0.17.11\",\n    \"eslint\": \"^8.35.0\",\n    \"prettier\": \"^2.8.3\",\n    \"ts-node\": \"^10.9.1\",\n    \"typescript\": \"^4.9.5\"\n  },\n  \"dependencies\": {\n    \"@commander-js/extra-typings\": \"^10.0.1\",\n    \"commander\": \"^10.0.0\",\n    \"nunjucks\": \"^3.2.3\",\n    \"sqlite3\": \"^5.1.4\"\n  }\n}\n", "import nunjucks, { Environment } from \"nunjucks\";\nimport { WordTemplateVariables, WordTemplate } from \"./templates\";\n\nconst vars: WordTemplateVariables = {\n  word: \"foo\",\n  usage: \"Foo was barred for the bar\",\n};\n\nexport const testRender = () => {\n  const res = nunjucks.renderString(WordTemplate, vars);\n  console.log(res);\n};\n", "import * as fs from \"fs\";\nimport path from \"path\";\n\nfunction readTemplate(name: string): string {\n  return fs.readFileSync(path.join(__dirname, `${name}.njk`), {\n    encoding: \"utf8\",\n    flag: \"r\",\n  });\n}\n\nexport type WordTemplateVariables = {\n  word: string;\n  usage: string;\n};\n\nexport const WordTemplate = readTemplate(\"word\");\n", "import { Database } from \"sqlite3\";\n\n// Open a SQLite database, stored in the file db.sqlite\nconst db = new Database(\"vocab.db\");\n\n// const statement = db.prepare(\n//     `UPDATE articles SET title=Third article' WHERE id=?`\n//   )\n//   statement.run([3]);\n\nexport const testSelect = () => {\n  db.get(\"SELECT * from words limit 1\", (_, res) => console.log(res));\n  db.get(\"SELECT * from lookups limit 1\", (_, res) => console.log(res.usage));\n};\n", "import { program } from \"./cli\";\nimport { testRender } from \"./render\";\nimport { testSelect } from \"./select\";\n\nprogram.parse();\nconst options = program.opts();\nconsole.log(options);\n\ntestRender();\ntestSelect();"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,2BAAgC;;;ACC9B,WAAQ;AACR,cAAW;AACX,kBAAe;;;ADMV,IAAM,UAAU,IAAI,6BAAQ,EAChC,YAAY,WAAW,EACvB,QAAQ,OAAO,EACf,KAAK,IAAI,EACT;AAAA,EACC;AAAA,EACA;AAAA,EACA;AACF,EACC,OAAO,uBAAuB,qCAAqC,OAAO,EAC1E;AAAA,EACC,IAAI,4BAAO,yBAAyB,eAAe,EAChD,QAAQ;AAAA,IACP;AAAA,IACA;AAAA,IACA;AAAA,EACF,CAAC,EACA,QAAQ,0BAAwB;AACrC;;;AE3BF,sBAAsC;;;ACAtC,SAAoB;AACpB,kBAAiB;AAEjB,SAAS,aAAaA,OAAsB;AAC1C,SAAU,gBAAa,YAAAC,QAAK,KAAK,WAAW,GAAGD,WAAU,GAAG;AAAA,IAC1D,UAAU;AAAA,IACV,MAAM;AAAA,EACR,CAAC;AACH;AAOO,IAAM,eAAe,aAAa,MAAM;;;ADZ/C,IAAM,OAA8B;AAAA,EAClC,MAAM;AAAA,EACN,OAAO;AACT;AAEO,IAAM,aAAa,MAAM;AAC9B,QAAM,MAAM,gBAAAE,QAAS,aAAa,cAAc,IAAI;AACpD,UAAQ,IAAI,GAAG;AACjB;;;AEXA,qBAAyB;AAGzB,IAAM,KAAK,IAAI,wBAAS,UAAU;AAO3B,IAAM,aAAa,MAAM;AAC9B,KAAG,IAAI,+BAA+B,CAAC,GAAG,QAAQ,QAAQ,IAAI,GAAG,CAAC;AAClE,KAAG,IAAI,iCAAiC,CAAC,GAAG,QAAQ,QAAQ,IAAI,IAAI,KAAK,CAAC;AAC5E;;;ACTA,QAAQ,MAAM;AACd,IAAM,UAAU,QAAQ,KAAK;AAC7B,QAAQ,IAAI,OAAO;AAEnB,WAAW;AACX,WAAW;",
  "names": ["name", "path", "nunjucks"]
}
